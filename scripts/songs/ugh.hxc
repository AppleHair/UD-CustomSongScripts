import funkin.Paths;
import funkin.play.cutscene.VideoCutscene;
import funkin.play.PlayStatePlaylist;
import funkin.play.song.Song;
import funkin.save.Save;

class UghSong extends Song {
    // Set these on onCountDownStart through
    // a module to override default behavior
    public var hasPlayedCutscene:Bool = false;
    public var cutsceneVideoPath:String = 'ughCutscene';

    function new() {
        super("ugh");
    }

    public override function listAltInstrumentalIds(difficultyId:String, variationId:String):Array<String> {
        if (difficultyId == 'easy' || difficultyId == 'normal' || difficultyId == 'hard') {
            var hasBeatenPicoMix = Save.instance.hasBeatenSong(this.id, ['easy-pico', 'normal-pico', 'hard-pico']);

            switch (variationId) {
                case 'pico':
                    // return hasBeatenPicoMix ? [''] : [];
                    // No Pico mix on BF instrumental, sorry!
                    return [];
                default:
                    return hasBeatenPicoMix ? ['pico'] : [];
            }
        }
    }
    
    public override function isSongNew(currentDifficulty:String):Bool{
        if (currentDifficulty == 'easy-pico' || currentDifficulty == 'normal-pico' || currentDifficulty == 'hard-pico'){
            if (Save.instance.hasBeatenSong(this.id, ['easy-pico', 'normal-pico', 'hard-pico']) == false) return true;
        }
        if (currentDifficulty == 'erect' || currentDifficulty == 'nightmare') {
            if (Save.instance.hasBeatenSong(this.id, ['erect', 'nightmare']) == false) return true;
        }
        return false;
    }

    public override function onCountdownStart(event:CountdownScriptEvent):Void {
        super.onCountdownStart(event);

        if (!PlayStatePlaylist.isStoryMode) hasPlayedCutscene = true;

        if (!hasPlayedCutscene) {
            trace('Pausing countdown to play a video cutscene (`ugh`)');

            hasPlayedCutscene = true;

            event.cancel(); // CANCEL THE COUNTDOWN!

            startVideo();
        }
    }

    function startVideo() {
        VideoCutscene.play(Paths.videos(cutsceneVideoPath));
    }

    /**
     * Don't replay the cutscene between restarts.
     */
    function onSongRetry(event:ScriptEvent) {
        super.onSongRetry(event);

        hasPlayedCutscene = true;
    }

    /**
     * Replay the cutscene after leaving the song.
     */
    function onCreate(event:ScriptEvent):Void {
        super.onCreate(event);

        hasPlayedCutscene = false;
        cutsceneVideoPath = 'ughCutscene';
    }
}